{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navigation.js","components/layout/Base.js","components/auth/Login.js","components/auth/Register.js","components/layout/Alert.js","components/reviews/ReviewItem.js","actions/review.js","components/reviews/ReviewForm.js","components/reviews/Reviews.js","components/layout/Movie.js","components/layout/axios.js","components/layout/ImageCard.js","components/layout/SearchResults.js","components/dashboard/Dashboard.js","reducers/auth.js","components/routing/PrivateRoute.js","components/layout/Profile.js","actions/profile.js","reducers/alert.js","reducers/profile.js","reducers/review.js","reducers/like.js","reducers/index.js","store.js","components/layout/About.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","GET_REVIEWS","GET_REVIEW","REVIEW_ERROR","UPDATE_LIKES","DELETE_REVIEW","ADD_REVIEW","ADD_LIKE_MOVIE","LIKE_MOVIE_ERROR","setAlert","msg","alertType","timeout","dispatch","id","uuid_v4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","Nav","className","to","style","marginRight","color","onClick","guestLinks","Navbar","bg","variant","Brand","Base","login","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","formData","setFormData","handleChange","e","target","name","value","onSubmit","preventDefault","container","Form","Group","controlId","Label","Control","placeholder","onChange","required","Text","Check","label","Button","register","password2","alerts","alert","length","map","ReviewItem","addLike","removeLike","deleteReview","review","_id","text","user","likes","comments","date","showActions","format","defaultProps","put","statusText","status","delete","addReview","imdbID","setText","cols","rows","getReviews","reviews","useEffect","filter","Movie","Title","Year","Poster","setLikes","Card","width","Img","src","Body","instance","create","baseURL","ImageCard","image","backdrop_path","poster_path","title","original_name","vote_count","pages","Math","floor","random","generateRandom","SearchResults","Search","setFilter","setSearch","images","setImages","request","console","log","results","fetchData","fetch","method","then","json","catch","err","getItemData","movie","imbdID","items","props","Type","Dashboard","initialState","getItem","Component","component","rest","render","profile","getCurrentProfile","createProfile","history","edit","push","withRouter","bio","favoritemovie","favoritegame","favoritetvseries","liked","combineReducers","action","setItem","removeItem","like","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","About","App","exact","path","Register","Login","Profile","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e02c73c.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\nexport const GET_REVIEWS = \"GET_REVIEWS\";\r\nexport const GET_REVIEW = \"GET_REVIEW\";\r\nexport const REVIEW_ERROR = \"REVIEW_ERROR\";\r\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\r\nexport const DELETE_REVIEW = \"DELETE_REVIEW\";\r\nexport const ADD_REVIEW = \"ADD_REVIEW\";\r\nexport const ADD_LIKE_MOVIE = \"ADD_LIKE_MOVIE\";\r\nexport const LIKE_MOVIE_ERROR = \"LIKE_MOVIE_ERROR\";\r\n\r\n","import { v4 as uuid_v4 } from \"uuid\";\r\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuid_v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from \"./types\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\n\r\n//Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: AUTH_ERROR });\r\n  }\r\n};\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/users\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/auth\";\r\n\r\nconst Navigation = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <Nav className=\"mr-auto\">\r\n      <Link to=\"/dashboard\" style={{ marginRight: \"12px\", color: \"gold\" }}>\r\n        Home\r\n      </Link>\r\n      <Link to=\"/profile\" style={{ marginRight: \"12px\", color: \"gold\" }}>\r\n        Profile\r\n      </Link>\r\n      <Link to=\"/about\" style={{ marginRight: \"12px\", color: \"gold\" }}>\r\n        About\r\n      </Link>\r\n      <Link\r\n        to=\"#!\"\r\n        onClick={logout}\r\n        style={{ marginRight: \"12px\", color: \"gold\" }}\r\n      >\r\n        Logout\r\n      </Link>\r\n    </Nav>\r\n  );\r\n  const guestLinks = (\r\n    <Nav className=\"mr-auto\">\r\n      <Link to=\"/register\" style={{ marginRight: \"12px\", color: \"gold\" }}>\r\n        Register\r\n      </Link>\r\n\r\n      <Link to=\"/login\" style={{ marginRight: \"12px\", color: \"gold\" }}>\r\n        Login\r\n      </Link>\r\n    </Nav>\r\n  );\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand style={{ color: \"gold\" }}>MMG</Navbar.Brand>\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </Navbar>\r\n  );\r\n};\r\nNavigation.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navigation);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Base = () => {\r\n  return (\r\n    <div>\r\n      <section>\r\n        <div>\r\n          <h1>Welcome to MMG!</h1>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/login\">\r\n            <button>Login</button>\r\n          </Link>\r\n          <Link to=\"/register\">\r\n            <button>Register</button>\r\n          </Link>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Base;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from \"../../actions/auth\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  //Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div container>\r\n        <h7>Login here</h7>\r\n        \r\n        {/* <form id=\"signin-form\" onSubmit={(e) => onSubmit(e)}>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          />\r\n          <label>Password</label>\r\n\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          />\r\n          \r\n          <button type=\"submit\">Login</button>\r\n        </form> */}\r\n        <Form onSubmit={(e) => onSubmit(e)}>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    <Form.Label>Email address</Form.Label>\r\n    <Form.Control type=\"email\" placeholder=\"Enter email\" name ='email' value={email} onChange={(e) => handleChange(e)} required/>\r\n    <Form.Text className=\"text-muted\">\r\n      We'll never share your email with anyone else.\r\n    </Form.Text>\r\n  </Form.Group>\r\n\r\n  <Form.Group controlId=\"formBasicPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control type=\"password\" placeholder=\"Password\" name='password' value={password} onChange={(e) => handleChange(e)} required/>\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formBasicCheckbox\">\r\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n  </Form.Group>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n      </div>\r\n\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert(\"Passwords do not match\", \"danger\");\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\" />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div container>\r\n        <h7>Sign up here</h7>\r\n\r\n        {/* <form id=\"signup-form\" onSubmit={(e) => onSubmit(e)}>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => handleChange(e)}\r\n            autoFocus\r\n            required\r\n          />\r\n          <label>Email</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Email\"\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          />\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"Confirm Password\"\r\n            onChange={(e) => handleChange(e)}\r\n            required\r\n          />\r\n\r\n          <button type=\"submit\">Sign Up</button>\r\n        </form> */}\r\n\r\n\r\n        <Form onSubmit={(e) => onSubmit(e)}>\r\n          <Form.Group controlId=\"formBasicName\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name='name'\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name='email'\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name='password'\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              name='password2'\r\n              placeholder=\"Confirm Password\"\r\n              value={password2}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicCheckbox\">\r\n            <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => <div key={alert.id}>{alert.msg}</div>);\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport { connect } from \"react-redux\";\r\nimport { addLike, removeLike, deleteReview } from \"../../actions/review\";\r\n\r\nconst ReviewItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deleteReview,\r\n  auth,\r\n  review: { _id, text, name, user, likes, comments, date },\r\n  showActions,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <div>{name}</div>\r\n      <p>{text}</p>\r\n      <p>\r\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button onClick={(e) => addLike(_id)}>\r\n            {likes.length > 0 ? <span>{likes.length}</span> : 0} likes\r\n          </button>\r\n\r\n          <button onClick={(e) => removeLike(_id)}>Remove Like</button>\r\n          <button>\r\n            <Link to={`/posts/${_id}`}>\r\n              Discussion\r\n              {comments.length > 0 && <span>{comments.length}</span>}\r\n            </Link>\r\n          </button>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button onClick={(e) => deleteReview(_id)}>Delete</button>\r\n          )}\r\n          <div>{}</div>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nReviewItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nReviewItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deleteReview: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deleteReview })(\r\n  ReviewItem\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_REVIEWS,\r\n  GET_REVIEW,\r\n  REVIEW_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_REVIEW,\r\n  ADD_REVIEW,\r\n} from \"./types\";\r\n\r\n//Get reviews\r\nexport const getReviews = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/posts\");\r\n\r\n    dispatch({\r\n      type: GET_REVIEWS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REVIEW_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REVIEW_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REVIEW_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Review\r\nexport const deleteReview = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_REVIEW,\r\n      payload: id,\r\n    });\r\n\r\n    dispatch(setAlert(\"Review Removed\", \"Success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REVIEW_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Review\r\nexport const addReview = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\"/api/posts/\", formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_REVIEW,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Review Created\", \"Success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REVIEW_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getReview = id => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_REVIEW,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: REVIEW_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addReview } from \"../../actions/review\";\r\n\r\nconst ReviewForm = ({ addReview, imdbID }) => {\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <div className=\"review-form\">\r\n      <div>\r\n        <h3>Leave a Review</h3>\r\n      </div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addReview({ text, imdbID });\r\n          setText(\"\");\r\n        }}\r\n      >\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Leave a review\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type=\"submit\" value=\"Submit\"></input>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nReviewForm.propTypes = {\r\n  addReview: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addReview })(ReviewForm);\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ReviewItem from \"./ReviewItem\";\r\nimport { getReviews } from \"../../actions/review\";\r\nimport { likeMovie } from '../../actions/like';\r\nimport ReviewForm from \"./ReviewForm\";\r\n\r\nconst Reviews = ({ getReviews, review: { reviews, loading }, imdbID }) => {\r\n  useEffect(() => {\r\n    getReviews();\r\n  }, [getReviews]);\r\n\r\n \r\n\r\n  return (\r\n    <Fragment>\r\n      {imdbID ? (\r\n        <div className=\"reviews\">\r\n          {reviews\r\n            .filter((review) => review.imdbID === imdbID)\r\n            .map((review) => (\r\n              <ReviewItem key={review._id} review={review} />\r\n            ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"reviews\">\r\n          {reviews.map((review) => (\r\n            <ReviewItem key={review._id} review={review} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nReviews.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  review: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  review: state.review,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getReviews })(Reviews);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport Reviews from \"../reviews/Reviews\";\r\nimport ReviewForm from \"../reviews/ReviewForm\";\r\nimport { likeMovie } from \"../../actions/like\";\r\n\r\nconst Movie = ({ Title, Year, Poster, imdbID }) => {\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  const likeTheMovie = (e) => {\r\n    if (likes >= 0) {\r\n      setLikes(likes + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"movie\">\r\n        <h1>{Title}</h1>\r\n        <h2>{Year}</h2>\r\n        <div>\r\n          <img src={Poster} alt={Title} />\r\n        </div>\r\n      </div>\r\n      <div>{likes}</div>\r\n      <button onClick={likeTheMovie}>Like</button>\r\n      {/* reviews - imdbID exists here */}\r\n      {/* <ReviewForm imdbID={imdbID} />\r\n      <Reviews imdbID={imdbID} />  */}\r\n      <Card className=\"our-movies\" style={{ width: \"18rem\" }}>\r\n        <Card.Img variant=\"top\" src={Poster} />\r\n        <Card.Body>\r\n          <Card.Title>Title: {Title}</Card.Title>\r\n          <Card.Text>Year Created: {Year}</Card.Text>\r\n          <Card.Text>Likes: {likes}</Card.Text>\r\n          <button onClick={likeTheMovie}>Like</button>\r\n          <Card.Text>\r\n            <ReviewForm imdbID={imdbID} />\r\n          </Card.Text>\r\n          <Card.Text>\r\n            <h2>Reviews:</h2>\r\n            <Reviews imdbID={imdbID} />\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction ImageCard({ image }) {\r\n  return (\r\n    // <div className=\"image-card\">\r\n    //   <h1>{image.title}</h1>\r\n    //   <img\r\n    //     src={`${baseURL}${image.backdrop_path || image.poster_path} `}\r\n    //     alt=\"movie poster\"\r\n    //   />\r\n    //   {/* <p>{image.overview}</p> */}\r\n    //   <h2>{image.title || image.original_name}</h2>\r\n    //   <p>{image.vote_count}</p>\r\n    // </div>\r\n<div >\r\n<Card style={{ width: '18rem' }}>\r\n<Card.Img variant=\"top\" src={`${baseURL}${image.backdrop_path || image.poster_path} `} />\r\n<Card.Body>\r\n  <Card.Title>Title: {image.title}</Card.Title>\r\n  <Card.Text>\r\n  Original Name: {image.title || image.original_name}\r\n  </Card.Text>\r\n  <Card.Text>\r\n  Votes: {image.vote_count}\r\n  </Card.Text>\r\n</Card.Body>\r\n</Card>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default ImageCard;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Movie from \"./Movie\";\r\nimport axios from \"./axios\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport { Form, Button } from 'react-bootstrap'\r\n// import Reviews from \"../reviews/Reviews\";\r\n\r\n// for testings\r\n// import { connect } from \"react-redux\";\r\n// import ReviewItem from \"../reviews/ReviewItem\";\r\n// import { getReviews } from \"../../actions/review\";\r\n// import ReviewForm from \"../reviews/ReviewForm\";\r\n\r\n// import Reviews from \"../reviews/Reviews\";\r\n// import axios from \"axios\";\r\nconst initialToken = \"b43be22b6a5309d4edfa333956d60b88\";\r\n// const initialUrl = \"https://api.themoviedb.org/3\";\r\n\r\nconst pages = Math.floor(Math.random() * 500);\r\n// const generateRandom = `/trending/all/week?api_key=${initialToken}&language=en-US`;\r\nconst generateRandom =\r\n  `/discover/movie?api_key=${initialToken}&certification_country=UScertification.lte=G&sort_by=popularity.desc&page=` +\r\n  pages;\r\n\r\nconst SearchResults = () => {\r\n  const [formData, setFormData] = useState({\r\n    Search: \"\",\r\n  });\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [search, setSearch] = useState(false);\r\n  const [images, setImages] = useState([]);\r\n  // const [movieOption, setMovieOption] = useState(generateRandom);\r\n  // const { movieOption } = data;\r\n  const { Search } = formData;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(generateRandom);\r\n      console.log(request.data.results);\r\n      setImages(request.data.results);\r\n      console.log(images);\r\n      return request;\r\n    }\r\n    fetchData();\r\n\r\n    setSearch(true);\r\n  }, []);\r\n\r\n  const getItemData = (Search) => {\r\n    fetch(\r\n      `https://movie-database-imdb-alternative.p.rapidapi.com/?s=${Search}&page=1&r=json`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-key\":\r\n            \"529528fe49mshb79e1f661d36214p1d26d5jsn10cb7da958c2\",\r\n          \"x-rapidapi-host\": \"movie-database-imdb-alternative.p.rapidapi.com\",\r\n        },\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data.Search);\r\n        setFormData(data.Search);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getItemData(Search);\r\n  };\r\n\r\n  // const getReviewData = (Search) => {\r\n  //   const Reviews = ({ getReviews, review: { reviews, loading } }) => {\r\n  //     useEffect(() => {\r\n  //       getReviews();\r\n  //     }, [getReviews]);\r\n  //   };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"searchresults\">\r\n        Search for your favorite Movies, TV Shows, and Games!\r\n      </div>\r\n      <div className=\"search\">\r\n        {/* <form id=\"search\" onSubmit={(e) => onSubmit(e)}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"Search\"\r\n            placeholder=\"ex: Lion King\"\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <button type=\"submit\">Search</button>\r\n        </form> */}\r\n        <Form onSubmit={(e) => onSubmit(e)}>\r\n  <Form.Group controlId=\"formBasicEmail\">\r\n    {/* <Form.Label>Search</Form.Label> */}\r\n    <Form.Control type=\"text\" name='Search' placeholder=\"Ex: Lion King\" onChange={handleChange}/>\r\n    \r\n  </Form.Group>\r\n  <Button variant=\"primary\" type=\"submit\">\r\n    Submit\r\n  </Button>\r\n</Form>\r\n      </div>\r\n\r\n      <div className='buttons'>\r\n        <button onClick={() => setFilter(\"movie\")} type=\"button\">\r\n          Movies\r\n        </button>\r\n        <button onClick={() => setFilter(\"game\")} type=\"button\">\r\n          Games\r\n        </button>\r\n        <button onClick={() => setFilter(\"series\")} type=\"button\">\r\n          TV Shows\r\n        </button>\r\n\r\n        {formData.length >= 0 &&\r\n          formData\r\n            .map((movie) => <Movie key={movie.imbdID} {...movie} />)\r\n            .filter((items) => {\r\n              console.log(items.props);\r\n              return filter ? items.props.Type === filter : true;\r\n            })}\r\n      </div>\r\n\r\n      <div className=\"results\">\r\n        {images.map((image) => (\r\n          <ImageCard image={image} />\r\n        ))}\r\n      </div>\r\n      {/* testing */}\r\n      {/* <ReviewForm /> */}\r\n      {/* <div className=\"reviews\">\r\n        {reviews.map((review) => (\r\n          <ReviewItem key={review._id} review={review} />\r\n        ))}\r\n      </div> */}\r\n      {/* <Reviews /> */}\r\n    </Fragment>\r\n  );\r\n};\r\n// };\r\n\r\n// Reviews.propTypes = {\r\n//   getPosts: PropTypes.func.isRequired,\r\n//   review: PropTypes.object.isRequired,\r\n// };\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   review: state.review,\r\n// });\r\n\r\nSearchResults.propTypes = {};\r\n\r\n// export default connect(mapStateToProps, { getReviews })(SearchResults);\r\n\r\nexport default SearchResults;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SearchResults from \"../layout/SearchResults\";\r\n\r\nconst Dashboard = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"dashboard\">\r\n        <SearchResults />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {};\r\n\r\nexport default Dashboard;\r\n\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function auth(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport auth from \"../../reducers/auth\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentProfile } from \"../../actions/profile\";\r\nimport { createProfile } from \"../../actions/profile\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst Profile = ({\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n  auth: { user },\r\n  profile: { profile },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    bio: profile.bio,\r\n    favoritemovie: profile.favoritemovie,\r\n    favoritegame: profile.favoritegame,\r\n    favoritetvseries: profile.favoritetvseries,\r\n  });\r\n\r\n  const { bio, favoritemovie, favoritegame, favoritetvseries } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Welcome {user && user.name}</h1>\r\n      {profile ? (\r\n        <div>\r\n          <h3>A little bit about myself:{profile.bio}</h3>\r\n          <h2>Favorite Movie:{profile.favoritemovie}</h2>\r\n          <h2>Favorite Game:{profile.favoritegame}</h2>\r\n          <h2>Favorite TV Series:{profile.favoritetvseries}</h2>\r\n        </div>\r\n      ) : null}\r\n      {/* {profile !== null ? (\r\n        <Fragment>has</Fragment>\r\n      ) : ( */}\r\n      <Fragment>\r\n        <h1>Create your profile!</h1>\r\n        <p>\r\n          Enter your favorite movies, games, and tv series; and a fun fact about\r\n          yourself.\r\n        </p>\r\n        <small>* = required field</small>\r\n\r\n        {/* <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              placeholder=\"Your bio here\"\r\n              name=\"bio\"\r\n              value={bio}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Your favorite movies\"\r\n              name=\"favoritemovie\"\r\n              value={favoritemovie}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Your favorite games\"\r\n              name=\"favoritegame\"\r\n              value={favoritegame}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Your favorite TV series\"\r\n              name=\"favoritetvseries\"\r\n              value={favoritetvseries}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n        </form>\r\n        <button onClick={onSubmit}>Submit</button> */}\r\n\r\n        <Form>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Bio</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"bio\"\r\n              name=\"bio\"\r\n              value={bio}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              A fun fact about yourself or where you are from\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Favorite Movie </Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"favorite movie\"\r\n              name=\"favoritemovie\"\r\n              value={favoritemovie}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Favorite TV Series</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"favorite tv series\"\r\n              name=\"favoritetvseries\"\r\n              value={favoritetvseries}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Favorite Game</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"favorite game\"\r\n              name=\"favoritegame\"\r\n              value={favoritegame}\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Fragment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  createProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, createProfile })(\r\n  withRouter(Profile)\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nimport { GET_PROFILE, PROFILE_ERROR } from \"./types\";\r\n\r\n// Get current users profile\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"api/profile\");\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(\"/api/profile\", formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? \"Profile Updated\" : \"Profile Created\"));\r\n\r\n    if (!edit) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function alert(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROFILE, PROFILE_ERROR, CLEAR_PROFILE } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  reviews: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function profile(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_REVIEWS,\r\n  GET_REVIEW,\r\n  REVIEW_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_REVIEW,\r\n  ADD_REVIEW,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  reviews: [],\r\n  review: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function review(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_REVIEWS:\r\n      return {\r\n        ...state,\r\n        reviews: payload,\r\n        loading: false,\r\n      };\r\n    case GET_REVIEW:\r\n      return {\r\n        ...state,\r\n        review: payload,\r\n        loading: false\r\n      }\r\n    case ADD_REVIEW:\r\n      return {\r\n        ...state,\r\n        reviews: [payload, ...state.reviews],\r\n        loading: false,\r\n      };\r\n    case DELETE_REVIEW:\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.filter((review) => review._id !== payload),\r\n        loading: false,\r\n      };\r\n    case REVIEW_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map((review) =>\r\n          review._id === payload.id\r\n            ? { ...review, likes: payload.likes }\r\n            : review\r\n        ),\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    ADD_LIKE_MOVIE,\r\n    LIKE_MOVIE_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    likes: [],\r\n    liked: null,\r\n    loading: true,\r\n    error: {},\r\n};\r\n\r\nexport default function like(state = initialState, action) {\r\n    const { type, payload} = action;\r\n\r\n    switch(type) {\r\n        case ADD_LIKE_MOVIE:\r\n            return {\r\n                ...state,\r\n                likes: [payload, ...state.likes],\r\n                loading: false,\r\n            }\r\n        case LIKE_MOVIE_ERROR:\r\n            return {\r\n                ...state,\r\n                error: payload,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from \"./profile\";\r\nimport review from \"./review\";\r\nimport like from './like';\r\n\r\nexport default combineReducers({ alert, auth, profile, review, like });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <div className=\"about-item\">\r\n        <h1>Bethany Folino</h1>\r\n        <p>\r\n          Bethany is a software developer interested in functionality and making\r\n          apps that simultaneously entertain and help people. She enjoys playing\r\n          games like Animal Crossing, Hollow Knight, and Super Smash Bros. A few\r\n          of her favorite TV series are Psych, Doctor Who, and Steins;Gate. Some\r\n          of her favorite movies are Now You See Me, Spiderman: Enter the\r\n          Spider-Verse, and the Back to the Future trilogy. This application\r\n          search component allows users to filter their search results by movie,\r\n          TV series, or game in order to help them more easily find what they\r\n          want to see or play.\r\n        </p>\r\n      </div>\r\n      <div className=\"about-item\">\r\n        <h1>Rebekah Miller</h1>\r\n        <p>\r\n          Rebekah is a Software Developer interested in accessibility for the\r\n          visually impaired. She enjoys playing Super Mario Bros. and watching\r\n          Batman movies. This application features images with alt tags, which\r\n          permit a screen reader to tell a visually impaired user what is\r\n          contained in the image.\r\n        </p>\r\n      </div>\r\n      <div className=\"about-item\">\r\n        <h1>Jacob Short</h1>\r\n        <p>\r\n          Jacob is a young and inspiring software developer, aimed directly at\r\n          the functionality and the structure of the application. He spends his\r\n          free time playing Call of Duty and watching intense dramas whether TV\r\n          Series, or Movies. This application features a back end utilizing\r\n          MongoDB, to be able to store our users' data which makes it easier for\r\n          us as devs to handle and store our users' precious and valuable\r\n          information.\r\n        </p>\r\n      </div>\r\n      <div className=\"about-item\">\r\n        <h1>Nathan Jolteus</h1>\r\n        <p>\r\n          Nathan is an aspiring software developer, hoping to do quite a bit of\r\n          front end web development. He spends his free time playing Mobile\r\n          Legends and watching funny YouTube videos. This application features\r\n          bootstrap, which adds flavor to the application and makes it more\r\n          visually appealing.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Fragment, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/layout/Navigation\";\r\nimport Base from \"./components/layout/Base\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Alert from \"./components/layout/Alert\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\nimport Profile from \"./components/layout/Profile\";\r\n// Redux\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { loadUser } from \"./actions/auth\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport About from \"./components/layout/About\";\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navigation />\r\n          <Route exact path=\"/\" component={Base} />\r\n          <Alert />\r\n          <Switch>\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n            <PrivateRoute exact path=\"/about\" component={About} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}